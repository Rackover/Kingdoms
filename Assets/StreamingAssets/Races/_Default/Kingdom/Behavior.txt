HELPERS:[
	StructureModifier:
		DIVIDE(
			SUM(
				GET_RESOURCE_VALUE(RSC:structure), 
				NEGATE(VALUE:GET_RESOURCE_MIN(RSC:structure))
			), 
			SUM(
				GET_RESOURCE_MAX(RSC:structure), 
				NEGATE(VALUE:GET_RESOURCE_MIN(RSC:structure))
			)
		),
	PercentageOfMapControl: 
		DIVIDE(
			GET_NUMBER_OF_OWNED_REGIONS(),
			GET_NUMBER_OF_REGIONS()
		),
	PercentageOfMapControlRequiredForAverageThreat: 20 * % *,
	ArmyRegenerationDailySpeed: 
		MULTIPLY(
			SUM(GET_RESOURCE_VALUE(RSC:wealth), NEGATE(VALUE:GET_RESOURCE_MIN(RSC:wealth))),
			StructureModifier()
		)
],
RESOURCES:[
	* Accumulated resources *
	population: [MIN:0, MAX:INF, RULES:[IS_MUTABLE:NO]],
	gold: [MIN:0, MAX:INF, RULES:[NO_MODIFIERS:YES]],
	army: [MIN:0, MAX:INF, RULES:[NO_MODIFIERS:YES]],
	
	* Dynamic resources *
    wealth: [START:0, MIN:-10, MAX:10],
    morale: [START:0, MIN:-10, MAX:10],
    structure: [START:0, MIN:-10, MAX:10],
    militarization: [START:5, MIN:0, MAX:100], * Percentage of the population who are soldiers *
	reputation: [MIN:-10, MAX:10],
	threat: [MIN:-10, MAX:10]
],
ON_NEW_DAY:[
	* Population *
	SET_RESOURCE_VALUE(
		RSC:population, 
		VALUE:GET_SUM_OF_ALL_OWNED_REGIONS_RESOURCE_VALUE(RSC:population)
	),
	
	* Threat *
	SET_RESOURCE_VALUE(
		RSC:threat,
		VALUE:
			SUM(
				MULTIPLY(
					SUM(
						PercentageOfMapControl(),
						DIVIDE(GET_RESOURCE_VALUE(RSC:militarization), GET_RESOURCE_MAX(RSC:militarization))
					),
					SUM(
						GET_RESOURCE_MAX(RSC:threat),
						NEGATE(VALUE:GET_RESOURCE_MIN(RSC:threat))
					)
				),
				NEGATE(
					MULTIPLY(
						PercentageOfMapControlRequiredForAverageThreat(),
						SUM(
							GET_RESOURCE_MAX(RSC:threat),
							NEGATE(VALUE:GET_RESOURCE_MIN(RSC:threat))
						)
					)
				),
				GET_RESOURCE_MIN(RSC:threat)
			)
	),
	
	* Army *
	INCREMENT_RESOURCE_VALUE(
		RSC:population, 
		VALUE:
			MULTIPLY(
				STEP(
					REFERENCE:MULTIPLY(GET_SUM_OF_ALL_OWNED_REGIONS_RESOURCE_VALUE(RSC:population), GET_RESOURCE_VALUE(RSC:militarization)),
					OVER:GET_RESOURCE_VALUE(RSC:army)
				),
				ArmyRegenerationDailySpeed()
			)
	)
	
	
	
	* Morale *
	* Structure *
	* Militarization *
	
],
ON_NEW_MONTH:[	
	* Gold *
	INCREMENT_RESOURCE_VALUE(
		RSC:gold,
		AMOUNT:	
		* 
			Increases by ( (Total regions wealth value) x  ( wealth  -min_wealth) 
			example : 4.2 x (3 - (-10)) => 4.2 x 13 => 54.6 => 54 (rounded)
		*
			MULTIPLY(
				SUM(GET_RESOURCE_VALUE(RSC:wealth), NEGATE(VALUE:GET_RESOURCE_MIN(RSC:wealth))),
				GET_SUM_OF_ALL_OWNED_REGIONS_RESOURCE_VALUE(RSC:wealth),
				StructureModifier()
			)
	)
	* simulate growth by increasing region population by a factor each year
	influenced by REGION wealth etc...

	public variables (other kingdoms can see them)			
	*
]



